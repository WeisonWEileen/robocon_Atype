ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32f4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/system_stm32f4xx.c"
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	1
  22              		.p2align 2,,3
  23              		.global	SystemInit
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	SystemInit:
  29              	.LFB130:
   1:Src/system_stm32f4xx.c **** /**
   2:Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f4xx.c ****   *
   7:Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Src/system_stm32f4xx.c ****   *   user application:
   9:Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  12:Src/system_stm32f4xx.c ****   *
  13:Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  15:Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f4xx.c ****   *                                     
  17:Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f4xx.c ****   *                                 during program execution.
  20:Src/system_stm32f4xx.c ****   *
  21:Src/system_stm32f4xx.c ****   *
  22:Src/system_stm32f4xx.c ****   ******************************************************************************
  23:Src/system_stm32f4xx.c ****   * @attention
  24:Src/system_stm32f4xx.c ****   *
  25:Src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2017 STMicroelectronics</center></h2>
  26:Src/system_stm32f4xx.c ****   *
  27:Src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  28:Src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  29:Src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 2


  30:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  31:Src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  32:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  33:Src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  34:Src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  35:Src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  36:Src/system_stm32f4xx.c ****   *      without specific prior written permission.
  37:Src/system_stm32f4xx.c ****   *
  38:Src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  39:Src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  40:Src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  41:Src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  42:Src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  43:Src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  44:Src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  45:Src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  46:Src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  47:Src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  48:Src/system_stm32f4xx.c ****   *
  49:Src/system_stm32f4xx.c ****   ******************************************************************************
  50:Src/system_stm32f4xx.c ****   */
  51:Src/system_stm32f4xx.c **** 
  52:Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  53:Src/system_stm32f4xx.c ****   * @{
  54:Src/system_stm32f4xx.c ****   */
  55:Src/system_stm32f4xx.c **** 
  56:Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  57:Src/system_stm32f4xx.c ****   * @{
  58:Src/system_stm32f4xx.c ****   */  
  59:Src/system_stm32f4xx.c ****   
  60:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  61:Src/system_stm32f4xx.c ****   * @{
  62:Src/system_stm32f4xx.c ****   */
  63:Src/system_stm32f4xx.c **** 
  64:Src/system_stm32f4xx.c **** 
  65:Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  66:Src/system_stm32f4xx.c **** 
  67:Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  68:Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  69:Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  70:Src/system_stm32f4xx.c **** 
  71:Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  72:Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  73:Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  74:Src/system_stm32f4xx.c **** 
  75:Src/system_stm32f4xx.c **** /**
  76:Src/system_stm32f4xx.c ****   * @}
  77:Src/system_stm32f4xx.c ****   */
  78:Src/system_stm32f4xx.c **** 
  79:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  80:Src/system_stm32f4xx.c ****   * @{
  81:Src/system_stm32f4xx.c ****   */
  82:Src/system_stm32f4xx.c **** 
  83:Src/system_stm32f4xx.c **** /**
  84:Src/system_stm32f4xx.c ****   * @}
  85:Src/system_stm32f4xx.c ****   */
  86:Src/system_stm32f4xx.c **** 
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 3


  87:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  88:Src/system_stm32f4xx.c ****   * @{
  89:Src/system_stm32f4xx.c ****   */
  90:Src/system_stm32f4xx.c **** 
  91:Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  92:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  93:Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  94:Src/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  95:Src/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  96:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  97:Src/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
  98:Src/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
  99:Src/system_stm32f4xx.c ****  
 100:Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
 101:Src/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 102:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 103:Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
 104:Src/system_stm32f4xx.c ****           STM32F479xx */
 105:Src/system_stm32f4xx.c **** 
 106:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 107:Src/system_stm32f4xx.c ****      Internal SRAM. */
 108:Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 109:Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 110:Src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 111:Src/system_stm32f4xx.c **** /******************************************************************************/
 112:Src/system_stm32f4xx.c **** 
 113:Src/system_stm32f4xx.c **** /**
 114:Src/system_stm32f4xx.c ****   * @}
 115:Src/system_stm32f4xx.c ****   */
 116:Src/system_stm32f4xx.c **** 
 117:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 118:Src/system_stm32f4xx.c ****   * @{
 119:Src/system_stm32f4xx.c ****   */
 120:Src/system_stm32f4xx.c **** 
 121:Src/system_stm32f4xx.c **** /**
 122:Src/system_stm32f4xx.c ****   * @}
 123:Src/system_stm32f4xx.c ****   */
 124:Src/system_stm32f4xx.c **** 
 125:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 126:Src/system_stm32f4xx.c ****   * @{
 127:Src/system_stm32f4xx.c ****   */
 128:Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 129:Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 130:Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 131:Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 132:Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 133:Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 134:Src/system_stm32f4xx.c ****                variable is updated automatically.
 135:Src/system_stm32f4xx.c ****   */
 136:Src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 137:Src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 138:Src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 139:Src/system_stm32f4xx.c **** /**
 140:Src/system_stm32f4xx.c ****   * @}
 141:Src/system_stm32f4xx.c ****   */
 142:Src/system_stm32f4xx.c **** 
 143:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 4


 144:Src/system_stm32f4xx.c ****   * @{
 145:Src/system_stm32f4xx.c ****   */
 146:Src/system_stm32f4xx.c **** 
 147:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 148:Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 149:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 150:Src/system_stm32f4xx.c **** 
 151:Src/system_stm32f4xx.c **** /**
 152:Src/system_stm32f4xx.c ****   * @}
 153:Src/system_stm32f4xx.c ****   */
 154:Src/system_stm32f4xx.c **** 
 155:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 156:Src/system_stm32f4xx.c ****   * @{
 157:Src/system_stm32f4xx.c ****   */
 158:Src/system_stm32f4xx.c **** 
 159:Src/system_stm32f4xx.c **** /**
 160:Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 161:Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 162:Src/system_stm32f4xx.c ****   *         configuration.
 163:Src/system_stm32f4xx.c ****   * @param  None
 164:Src/system_stm32f4xx.c ****   * @retval None
 165:Src/system_stm32f4xx.c ****   */
 166:Src/system_stm32f4xx.c **** void SystemInit(void)
 167:Src/system_stm32f4xx.c **** {
  30              		.loc 1 167 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 168:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 169:Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 170:Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 170 5 view .LVU1
  36              		.loc 1 170 8 is_stmt 0 view .LVU2
  37 0000 1049     		ldr	r1, .L4
 171:Src/system_stm32f4xx.c ****   #endif
 172:Src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 173:Src/system_stm32f4xx.c ****   /* Set HSION bit */
 174:Src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  38              		.loc 1 174 6 view .LVU3
  39 0002 114B     		ldr	r3, .L4+4
 170:Src/system_stm32f4xx.c ****   #endif
  40              		.loc 1 170 8 view .LVU4
  41 0004 D1F88820 		ldr	r2, [r1, #136]
 170:Src/system_stm32f4xx.c ****   #endif
  42              		.loc 1 170 16 view .LVU5
  43 0008 42F47002 		orr	r2, r2, #15728640
 167:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
  44              		.loc 1 167 1 view .LVU6
  45 000c 10B4     		push	{r4}
  46              		.cfi_def_cfa_offset 4
  47              		.cfi_offset 4, -4
 170:Src/system_stm32f4xx.c ****   #endif
  48              		.loc 1 170 16 view .LVU7
  49 000e C1F88820 		str	r2, [r1, #136]
  50              		.loc 1 174 3 is_stmt 1 view .LVU8
  51              		.loc 1 174 6 is_stmt 0 view .LVU9
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 5


  52 0012 1A68     		ldr	r2, [r3]
 175:Src/system_stm32f4xx.c **** 
 176:Src/system_stm32f4xx.c ****   /* Reset CFGR register */
 177:Src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 178:Src/system_stm32f4xx.c **** 
 179:Src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 180:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 181:Src/system_stm32f4xx.c **** 
 182:Src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 183:Src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  53              		.loc 1 183 16 view .LVU10
  54 0014 0D4C     		ldr	r4, .L4+8
 177:Src/system_stm32f4xx.c **** 
  55              		.loc 1 177 13 view .LVU11
  56 0016 0020     		movs	r0, #0
 174:Src/system_stm32f4xx.c **** 
  57              		.loc 1 174 11 view .LVU12
  58 0018 42F00102 		orr	r2, r2, #1
  59 001c 1A60     		str	r2, [r3]
 177:Src/system_stm32f4xx.c **** 
  60              		.loc 1 177 3 is_stmt 1 view .LVU13
 177:Src/system_stm32f4xx.c **** 
  61              		.loc 1 177 13 is_stmt 0 view .LVU14
  62 001e 9860     		str	r0, [r3, #8]
 180:Src/system_stm32f4xx.c **** 
  63              		.loc 1 180 3 is_stmt 1 view .LVU15
 180:Src/system_stm32f4xx.c **** 
  64              		.loc 1 180 6 is_stmt 0 view .LVU16
  65 0020 1A68     		ldr	r2, [r3]
 180:Src/system_stm32f4xx.c **** 
  66              		.loc 1 180 11 view .LVU17
  67 0022 22F08472 		bic	r2, r2, #17301504
  68 0026 22F48032 		bic	r2, r2, #65536
  69 002a 1A60     		str	r2, [r3]
  70              		.loc 1 183 3 is_stmt 1 view .LVU18
  71              		.loc 1 183 16 is_stmt 0 view .LVU19
  72 002c 5C60     		str	r4, [r3, #4]
 184:Src/system_stm32f4xx.c **** 
 185:Src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 186:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  73              		.loc 1 186 3 is_stmt 1 view .LVU20
  74              		.loc 1 186 6 is_stmt 0 view .LVU21
  75 002e 1A68     		ldr	r2, [r3]
 187:Src/system_stm32f4xx.c **** 
 188:Src/system_stm32f4xx.c ****   /* Disable all interrupts */
 189:Src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 190:Src/system_stm32f4xx.c **** 
 191:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 192:Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 193:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 194:Src/system_stm32f4xx.c **** 
 195:Src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 196:Src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 197:Src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 198:Src/system_stm32f4xx.c **** #else
 199:Src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  76              		.loc 1 199 13 view .LVU22
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 6


  77 0030 4FF00064 		mov	r4, #134217728
 186:Src/system_stm32f4xx.c **** 
  78              		.loc 1 186 11 view .LVU23
  79 0034 22F48022 		bic	r2, r2, #262144
  80 0038 1A60     		str	r2, [r3]
 189:Src/system_stm32f4xx.c **** 
  81              		.loc 1 189 3 is_stmt 1 view .LVU24
 189:Src/system_stm32f4xx.c **** 
  82              		.loc 1 189 12 is_stmt 0 view .LVU25
  83 003a D860     		str	r0, [r3, #12]
  84              		.loc 1 199 3 is_stmt 1 view .LVU26
  85              		.loc 1 199 13 is_stmt 0 view .LVU27
  86 003c 8C60     		str	r4, [r1, #8]
 200:Src/system_stm32f4xx.c **** #endif
 201:Src/system_stm32f4xx.c **** }
  87              		.loc 1 201 1 view .LVU28
  88 003e 5DF8044B 		ldr	r4, [sp], #4
  89              		.cfi_restore 4
  90              		.cfi_def_cfa_offset 0
  91 0042 7047     		bx	lr
  92              	.L5:
  93              		.align	2
  94              	.L4:
  95 0044 00ED00E0 		.word	-536810240
  96 0048 00380240 		.word	1073887232
  97 004c 10300024 		.word	603992080
  98              		.cfi_endproc
  99              	.LFE130:
 101              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 102              		.align	1
 103              		.p2align 2,,3
 104              		.global	SystemCoreClockUpdate
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	SystemCoreClockUpdate:
 110              	.LFB131:
 202:Src/system_stm32f4xx.c **** 
 203:Src/system_stm32f4xx.c **** /**
 204:Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 205:Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 206:Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 207:Src/system_stm32f4xx.c ****   *         other parameters.
 208:Src/system_stm32f4xx.c ****   *           
 209:Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 210:Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 211:Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 212:Src/system_stm32f4xx.c ****   *     
 213:Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 214:Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 215:Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 216:Src/system_stm32f4xx.c ****   *             
 217:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 218:Src/system_stm32f4xx.c ****   *                                              
 219:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 220:Src/system_stm32f4xx.c ****   *                          
 221:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 7


 222:Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 223:Src/system_stm32f4xx.c ****   *         
 224:Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 225:Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 226:Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 227:Src/system_stm32f4xx.c ****   *    
 228:Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 229:Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 230:Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 231:Src/system_stm32f4xx.c ****   *              may have wrong result.
 232:Src/system_stm32f4xx.c ****   *                
 233:Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 234:Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 235:Src/system_stm32f4xx.c ****   *     
 236:Src/system_stm32f4xx.c ****   * @param  None
 237:Src/system_stm32f4xx.c ****   * @retval None
 238:Src/system_stm32f4xx.c ****   */
 239:Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 240:Src/system_stm32f4xx.c **** {
 111              		.loc 1 240 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 241:Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 116              		.loc 1 241 3 view .LVU30
 117              	.LVL0:
 242:Src/system_stm32f4xx.c ****   
 243:Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 244:Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 118              		.loc 1 244 3 view .LVU31
 119              		.loc 1 244 12 is_stmt 0 view .LVU32
 120 0000 164A     		ldr	r2, .L13
 121 0002 9368     		ldr	r3, [r2, #8]
 122              		.loc 1 244 7 view .LVU33
 123 0004 03F00C03 		and	r3, r3, #12
 124              	.LVL1:
 245:Src/system_stm32f4xx.c **** 
 246:Src/system_stm32f4xx.c ****   switch (tmp)
 125              		.loc 1 246 3 is_stmt 1 view .LVU34
 126 0008 042B     		cmp	r3, #4
 127 000a 0CD0     		beq	.L10
 128 000c 082B     		cmp	r3, #8
 129 000e 0CD0     		beq	.L12
 130 0010 134B     		ldr	r3, .L13+4
 131              	.LVL2:
 132              	.L7:
 247:Src/system_stm32f4xx.c ****   {
 248:Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 249:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 250:Src/system_stm32f4xx.c ****       break;
 251:Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 252:Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 253:Src/system_stm32f4xx.c ****       break;
 254:Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 255:Src/system_stm32f4xx.c **** 
 256:Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 8


 257:Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 258:Src/system_stm32f4xx.c ****          */    
 259:Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 260:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 261:Src/system_stm32f4xx.c ****       
 262:Src/system_stm32f4xx.c ****       if (pllsource != 0)
 263:Src/system_stm32f4xx.c ****       {
 264:Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 265:Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 266:Src/system_stm32f4xx.c ****       }
 267:Src/system_stm32f4xx.c ****       else
 268:Src/system_stm32f4xx.c ****       {
 269:Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 270:Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 271:Src/system_stm32f4xx.c ****       }
 272:Src/system_stm32f4xx.c **** 
 273:Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 274:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 275:Src/system_stm32f4xx.c ****       break;
 276:Src/system_stm32f4xx.c ****     default:
 277:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 278:Src/system_stm32f4xx.c ****       break;
 279:Src/system_stm32f4xx.c ****   }
 280:Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 281:Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 282:Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 133              		.loc 1 282 3 view .LVU35
 134              		.loc 1 282 28 is_stmt 0 view .LVU36
 135 0012 124A     		ldr	r2, .L13
 136              		.loc 1 282 22 view .LVU37
 137 0014 1348     		ldr	r0, .L13+8
 138              		.loc 1 282 28 view .LVU38
 139 0016 9268     		ldr	r2, [r2, #8]
 140              	.LVL3:
 283:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 284:Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 141              		.loc 1 284 3 is_stmt 1 view .LVU39
 142              		.loc 1 284 19 is_stmt 0 view .LVU40
 143 0018 1349     		ldr	r1, .L13+12
 282:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 144              		.loc 1 282 52 view .LVU41
 145 001a C2F30312 		ubfx	r2, r2, #4, #4
 146              	.LVL4:
 282:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 147              		.loc 1 282 7 view .LVU42
 148 001e 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 149              		.loc 1 284 19 view .LVU43
 150 0020 D340     		lsrs	r3, r3, r2
 151 0022 0B60     		str	r3, [r1]
 285:Src/system_stm32f4xx.c **** }
 152              		.loc 1 285 1 view .LVU44
 153 0024 7047     		bx	lr
 154              	.LVL5:
 155              	.L10:
 246:Src/system_stm32f4xx.c ****   {
 156              		.loc 1 246 3 view .LVU45
 157 0026 114B     		ldr	r3, .L13+16
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 9


 158              	.LVL6:
 246:Src/system_stm32f4xx.c ****   {
 159              		.loc 1 246 3 view .LVU46
 160 0028 F3E7     		b	.L7
 161              	.LVL7:
 162              	.L12:
 259:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 163              		.loc 1 259 7 is_stmt 1 view .LVU47
 259:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 164              		.loc 1 259 23 is_stmt 0 view .LVU48
 165 002a 5368     		ldr	r3, [r2, #4]
 166              	.LVL8:
 260:Src/system_stm32f4xx.c ****       
 167              		.loc 1 260 7 is_stmt 1 view .LVU49
 260:Src/system_stm32f4xx.c ****       
 168              		.loc 1 260 17 is_stmt 0 view .LVU50
 169 002c 5168     		ldr	r1, [r2, #4]
 262:Src/system_stm32f4xx.c ****       {
 170              		.loc 1 262 10 view .LVU51
 171 002e 13F4800F 		tst	r3, #4194304
 265:Src/system_stm32f4xx.c ****       }
 172              		.loc 1 265 44 view .LVU52
 173 0032 5368     		ldr	r3, [r2, #4]
 174              	.LVL9:
 265:Src/system_stm32f4xx.c ****       }
 175              		.loc 1 265 29 view .LVU53
 176 0034 14BF     		ite	ne
 177 0036 0D4A     		ldrne	r2, .L13+16
 270:Src/system_stm32f4xx.c ****       }
 178              		.loc 1 270 29 view .LVU54
 179 0038 094A     		ldreq	r2, .L13+4
 270:Src/system_stm32f4xx.c ****       }
 180              		.loc 1 270 74 view .LVU55
 181 003a C3F38813 		ubfx	r3, r3, #6, #9
 260:Src/system_stm32f4xx.c ****       
 182              		.loc 1 260 12 view .LVU56
 183 003e 01F03F01 		and	r1, r1, #63
 184              	.LVL10:
 262:Src/system_stm32f4xx.c ****       {
 185              		.loc 1 262 7 is_stmt 1 view .LVU57
 265:Src/system_stm32f4xx.c ****       }
 186              		.loc 1 265 9 view .LVU58
 270:Src/system_stm32f4xx.c ****       }
 187              		.loc 1 270 9 view .LVU59
 270:Src/system_stm32f4xx.c ****       }
 188              		.loc 1 270 29 is_stmt 0 view .LVU60
 189 0042 B2FBF1F2 		udiv	r2, r2, r1
 270:Src/system_stm32f4xx.c ****       }
 190              		.loc 1 270 16 view .LVU61
 191 0046 02FB03F3 		mul	r3, r2, r3
 192              	.LVL11:
 273:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 193              		.loc 1 273 7 is_stmt 1 view .LVU62
 273:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 194              		.loc 1 273 20 is_stmt 0 view .LVU63
 195 004a 044A     		ldr	r2, .L13
 196 004c 5268     		ldr	r2, [r2, #4]
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 10


 197              	.LVL12:
 274:Src/system_stm32f4xx.c ****       break;
 198              		.loc 1 274 7 is_stmt 1 view .LVU64
 273:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 199              		.loc 1 273 50 is_stmt 0 view .LVU65
 200 004e C2F30142 		ubfx	r2, r2, #16, #2
 201              	.LVL13:
 273:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 202              		.loc 1 273 56 view .LVU66
 203 0052 0132     		adds	r2, r2, #1
 273:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 204              		.loc 1 273 12 view .LVU67
 205 0054 5200     		lsls	r2, r2, #1
 274:Src/system_stm32f4xx.c ****       break;
 206              		.loc 1 274 31 view .LVU68
 207 0056 B3FBF2F3 		udiv	r3, r3, r2
 208              	.LVL14:
 275:Src/system_stm32f4xx.c ****     default:
 209              		.loc 1 275 7 is_stmt 1 view .LVU69
 210 005a DAE7     		b	.L7
 211              	.L14:
 212              		.align	2
 213              	.L13:
 214 005c 00380240 		.word	1073887232
 215 0060 0024F400 		.word	16000000
 216 0064 00000000 		.word	AHBPrescTable
 217 0068 00000000 		.word	SystemCoreClock
 218 006c 001BB700 		.word	12000000
 219              		.cfi_endproc
 220              	.LFE131:
 222              		.global	APBPrescTable
 223              		.section	.rodata.APBPrescTable,"a"
 224              		.align	2
 227              	APBPrescTable:
 228 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 228      01020304 
 229              		.global	AHBPrescTable
 230              		.section	.rodata.AHBPrescTable,"a"
 231              		.align	2
 234              	AHBPrescTable:
 235 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 235      00000000 
 235      01020304 
 235      06
 236 000d 070809   		.ascii	"\007\010\011"
 237              		.global	SystemCoreClock
 238              		.section	.data.SystemCoreClock,"aw"
 239              		.align	2
 242              	SystemCoreClock:
 243 0000 0024F400 		.word	16000000
 244              		.text
 245              	.Letext0:
 246              		.file 2 "c:\\users\\pw705\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 247              		.file 3 "c:\\users\\pw705\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 248              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 249              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 250              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 11


ARM GAS  C:\Users\pw705\AppData\Local\Temp\cczKLlws.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:21     .text.SystemInit:00000000 $t
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:28     .text.SystemInit:00000000 SystemInit
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:95     .text.SystemInit:00000044 $d
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:102    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:109    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:214    .text.SystemCoreClockUpdate:0000005c $d
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:234    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:242    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:227    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:224    .rodata.APBPrescTable:00000000 $d
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:231    .rodata.AHBPrescTable:00000000 $d
C:\Users\pw705\AppData\Local\Temp\cczKLlws.s:239    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS

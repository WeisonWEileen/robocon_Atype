ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_driver_sd.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/bsp_driver_sd.c"
  20              		.section	.text.BSP_SD_ITConfig,"ax",%progbits
  21              		.align	1
  22              		.p2align 2,,3
  23              		.weak	BSP_SD_ITConfig
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	BSP_SD_ITConfig:
  29              	.LFB131:
   1:Src/bsp_driver_sd.c **** /* USER CODE BEGIN Header */
   2:Src/bsp_driver_sd.c **** /**
   3:Src/bsp_driver_sd.c ****  ******************************************************************************
   4:Src/bsp_driver_sd.c ****   * @file    bsp_driver_sd.c for F4 (based on stm324x9i_eval_sd.c)
   5:Src/bsp_driver_sd.c ****  * @brief   This file includes a generic uSD card driver.
   6:Src/bsp_driver_sd.c ****  *          To be completed by the user according to the board used for the project.
   7:Src/bsp_driver_sd.c ****  * @note    Some functions generated as weak: they can be overridden by
   8:Src/bsp_driver_sd.c ****  *          - code in user files
   9:Src/bsp_driver_sd.c ****  *          - or BSP code from the FW pack files
  10:Src/bsp_driver_sd.c ****  *          if such files are added to the generated project (by the user).
  11:Src/bsp_driver_sd.c ****  ******************************************************************************
  12:Src/bsp_driver_sd.c ****   * @attention
  13:Src/bsp_driver_sd.c ****   *
  14:Src/bsp_driver_sd.c ****   * Copyright (c) 2024 STMicroelectronics.
  15:Src/bsp_driver_sd.c ****   * All rights reserved.
  16:Src/bsp_driver_sd.c ****   *
  17:Src/bsp_driver_sd.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Src/bsp_driver_sd.c ****   * in the root directory of this software component.
  19:Src/bsp_driver_sd.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Src/bsp_driver_sd.c ****   *
  21:Src/bsp_driver_sd.c ****  ******************************************************************************
  22:Src/bsp_driver_sd.c ****  */
  23:Src/bsp_driver_sd.c **** /* USER CODE END Header */
  24:Src/bsp_driver_sd.c **** 
  25:Src/bsp_driver_sd.c **** #ifdef OLD_API
  26:Src/bsp_driver_sd.c **** /* kept to avoid issue when migrating old projects. */
  27:Src/bsp_driver_sd.c **** /* USER CODE BEGIN 0 */
  28:Src/bsp_driver_sd.c **** 
  29:Src/bsp_driver_sd.c **** /* USER CODE END 0 */
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 2


  30:Src/bsp_driver_sd.c **** #else
  31:Src/bsp_driver_sd.c **** /* USER CODE BEGIN FirstSection */
  32:Src/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add new definitions */
  33:Src/bsp_driver_sd.c **** /* USER CODE END FirstSection */
  34:Src/bsp_driver_sd.c **** /* Includes ------------------------------------------------------------------*/
  35:Src/bsp_driver_sd.c **** #include "bsp_driver_sd.h"
  36:Src/bsp_driver_sd.c **** 
  37:Src/bsp_driver_sd.c **** /* Extern variables ---------------------------------------------------------*/
  38:Src/bsp_driver_sd.c **** 
  39:Src/bsp_driver_sd.c **** extern SD_HandleTypeDef hsd;
  40:Src/bsp_driver_sd.c **** 
  41:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeInitSection */
  42:Src/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add code */
  43:Src/bsp_driver_sd.c **** /* USER CODE END BeforeInitSection */
  44:Src/bsp_driver_sd.c **** /**
  45:Src/bsp_driver_sd.c ****   * @brief  Initializes the SD card device.
  46:Src/bsp_driver_sd.c ****   * @retval SD status
  47:Src/bsp_driver_sd.c ****   */
  48:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Init(void)
  49:Src/bsp_driver_sd.c **** {
  50:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  51:Src/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
  52:Src/bsp_driver_sd.c ****   if (BSP_SD_IsDetected() != SD_PRESENT)
  53:Src/bsp_driver_sd.c ****   {
  54:Src/bsp_driver_sd.c ****     return MSD_ERROR;
  55:Src/bsp_driver_sd.c ****   }
  56:Src/bsp_driver_sd.c ****   /* HAL SD initialization */
  57:Src/bsp_driver_sd.c ****   sd_state = HAL_SD_Init(&hsd);
  58:Src/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
  59:Src/bsp_driver_sd.c ****   if (sd_state == MSD_OK)
  60:Src/bsp_driver_sd.c ****   {
  61:Src/bsp_driver_sd.c ****     /* Enable wide operation */
  62:Src/bsp_driver_sd.c ****      if (HAL_SD_ConfigWideBusOperation(&hsd, SDIO_BUS_WIDE_4B) != HAL_OK)
  63:Src/bsp_driver_sd.c ****     {
  64:Src/bsp_driver_sd.c ****       sd_state = MSD_ERROR;
  65:Src/bsp_driver_sd.c ****     }
  66:Src/bsp_driver_sd.c ****   }
  67:Src/bsp_driver_sd.c **** 
  68:Src/bsp_driver_sd.c ****   return sd_state;
  69:Src/bsp_driver_sd.c **** }
  70:Src/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
  71:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  72:Src/bsp_driver_sd.c **** /* USER CODE END AfterInitSection */
  73:Src/bsp_driver_sd.c **** 
  74:Src/bsp_driver_sd.c **** /* USER CODE BEGIN InterruptMode */
  75:Src/bsp_driver_sd.c **** /**
  76:Src/bsp_driver_sd.c ****   * @brief  Configures Interrupt mode for SD detection pin.
  77:Src/bsp_driver_sd.c ****   * @retval Returns 0
  78:Src/bsp_driver_sd.c ****   */
  79:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ITConfig(void)
  80:Src/bsp_driver_sd.c **** {
  30              		.loc 1 80 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  81:Src/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 3


  82:Src/bsp_driver_sd.c **** 
  83:Src/bsp_driver_sd.c ****   return (uint8_t)0;
  35              		.loc 1 83 3 view .LVU1
  84:Src/bsp_driver_sd.c **** }
  36              		.loc 1 84 1 is_stmt 0 view .LVU2
  37 0000 0020     		movs	r0, #0
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE131:
  42              		.section	.text.BSP_SD_DetectIT,"ax",%progbits
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	BSP_SD_DetectIT
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	BSP_SD_DetectIT:
  51              	.LFB132:
  85:Src/bsp_driver_sd.c **** 
  86:Src/bsp_driver_sd.c **** /** @brief  SD detect IT treatment
  87:Src/bsp_driver_sd.c ****   */
  88:Src/bsp_driver_sd.c **** __weak void BSP_SD_DetectIT(void)
  89:Src/bsp_driver_sd.c **** {
  52              		.loc 1 89 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  90:Src/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
  91:Src/bsp_driver_sd.c **** }
  57              		.loc 1 91 1 view .LVU4
  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE132:
  62 0002 00BF     		.section	.text.BSP_SD_ReadBlocks,"ax",%progbits
  63              		.align	1
  64              		.p2align 2,,3
  65              		.weak	BSP_SD_ReadBlocks
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	BSP_SD_ReadBlocks:
  71              	.LVL0:
  72              	.LFB133:
  92:Src/bsp_driver_sd.c **** /* USER CODE END InterruptMode */
  93:Src/bsp_driver_sd.c **** 
  94:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadBlocksSection */
  95:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  96:Src/bsp_driver_sd.c **** /* USER CODE END BeforeReadBlocksSection */
  97:Src/bsp_driver_sd.c **** /**
  98:Src/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
  99:Src/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 100:Src/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 101:Src/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 102:Src/bsp_driver_sd.c ****   * @param  Timeout: Timeout for read operation
 103:Src/bsp_driver_sd.c ****   * @retval SD status
 104:Src/bsp_driver_sd.c ****   */
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 4


 105:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t
 106:Src/bsp_driver_sd.c **** {
  73              		.loc 1 106 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  77              		.loc 1 107 3 view .LVU6
 108:Src/bsp_driver_sd.c **** 
 109:Src/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks(&hsd, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout) != HAL_OK)
  78              		.loc 1 109 3 view .LVU7
 106:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  79              		.loc 1 106 1 is_stmt 0 view .LVU8
  80 0000 00B5     		push	{lr}
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 14, -4
  83 0002 83B0     		sub	sp, sp, #12
  84              		.cfi_def_cfa_offset 16
 106:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  85              		.loc 1 106 1 view .LVU9
  86 0004 8446     		mov	ip, r0
  87              		.loc 1 109 7 view .LVU10
  88 0006 0093     		str	r3, [sp]
  89 0008 0548     		ldr	r0, .L6
  90              	.LVL1:
  91              		.loc 1 109 7 view .LVU11
  92 000a 1346     		mov	r3, r2
  93              	.LVL2:
  94              		.loc 1 109 7 view .LVU12
  95 000c 0A46     		mov	r2, r1
  96              	.LVL3:
  97              		.loc 1 109 7 view .LVU13
  98 000e 6146     		mov	r1, ip
  99              	.LVL4:
 100              		.loc 1 109 7 view .LVU14
 101 0010 FFF7FEFF 		bl	HAL_SD_ReadBlocks
 102              	.LVL5:
 110:Src/bsp_driver_sd.c ****   {
 111:Src/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 112:Src/bsp_driver_sd.c ****   }
 113:Src/bsp_driver_sd.c **** 
 114:Src/bsp_driver_sd.c ****   return sd_state;
 103              		.loc 1 114 3 is_stmt 1 view .LVU15
 115:Src/bsp_driver_sd.c **** }
 104              		.loc 1 115 1 is_stmt 0 view .LVU16
 105 0014 0038     		subs	r0, r0, #0
 106              	.LVL6:
 107              		.loc 1 115 1 view .LVU17
 108 0016 18BF     		it	ne
 109 0018 0120     		movne	r0, #1
 110 001a 03B0     		add	sp, sp, #12
 111              		.cfi_def_cfa_offset 4
 112              		@ sp needed
 113 001c 5DF804FB 		ldr	pc, [sp], #4
 114              	.L7:
 115              		.align	2
 116              	.L6:
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 5


 117 0020 00000000 		.word	hsd
 118              		.cfi_endproc
 119              	.LFE133:
 121              		.section	.text.BSP_SD_WriteBlocks,"ax",%progbits
 122              		.align	1
 123              		.p2align 2,,3
 124              		.weak	BSP_SD_WriteBlocks
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	BSP_SD_WriteBlocks:
 130              	.LVL7:
 131              	.LFB134:
 116:Src/bsp_driver_sd.c **** 
 117:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteBlocksSection */
 118:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 119:Src/bsp_driver_sd.c **** /* USER CODE END BeforeWriteBlocksSection */
 120:Src/bsp_driver_sd.c **** /**
 121:Src/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 122:Src/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 123:Src/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 124:Src/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 125:Src/bsp_driver_sd.c ****   * @param  Timeout: Timeout for write operation
 126:Src/bsp_driver_sd.c ****   * @retval SD status
 127:Src/bsp_driver_sd.c ****   */
 128:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32
 129:Src/bsp_driver_sd.c **** {
 132              		.loc 1 129 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 130:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 136              		.loc 1 130 3 view .LVU19
 131:Src/bsp_driver_sd.c **** 
 132:Src/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks(&hsd, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout) != HAL_OK)
 137              		.loc 1 132 3 view .LVU20
 129:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 138              		.loc 1 129 1 is_stmt 0 view .LVU21
 139 0000 00B5     		push	{lr}
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 14, -4
 142 0002 83B0     		sub	sp, sp, #12
 143              		.cfi_def_cfa_offset 16
 129:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 144              		.loc 1 129 1 view .LVU22
 145 0004 8446     		mov	ip, r0
 146              		.loc 1 132 7 view .LVU23
 147 0006 0093     		str	r3, [sp]
 148 0008 0548     		ldr	r0, .L10
 149              	.LVL8:
 150              		.loc 1 132 7 view .LVU24
 151 000a 1346     		mov	r3, r2
 152              	.LVL9:
 153              		.loc 1 132 7 view .LVU25
 154 000c 0A46     		mov	r2, r1
 155              	.LVL10:
 156              		.loc 1 132 7 view .LVU26
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 6


 157 000e 6146     		mov	r1, ip
 158              	.LVL11:
 159              		.loc 1 132 7 view .LVU27
 160 0010 FFF7FEFF 		bl	HAL_SD_WriteBlocks
 161              	.LVL12:
 133:Src/bsp_driver_sd.c ****   {
 134:Src/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 135:Src/bsp_driver_sd.c ****   }
 136:Src/bsp_driver_sd.c **** 
 137:Src/bsp_driver_sd.c ****   return sd_state;
 162              		.loc 1 137 3 is_stmt 1 view .LVU28
 138:Src/bsp_driver_sd.c **** }
 163              		.loc 1 138 1 is_stmt 0 view .LVU29
 164 0014 0038     		subs	r0, r0, #0
 165              	.LVL13:
 166              		.loc 1 138 1 view .LVU30
 167 0016 18BF     		it	ne
 168 0018 0120     		movne	r0, #1
 169 001a 03B0     		add	sp, sp, #12
 170              		.cfi_def_cfa_offset 4
 171              		@ sp needed
 172 001c 5DF804FB 		ldr	pc, [sp], #4
 173              	.L11:
 174              		.align	2
 175              	.L10:
 176 0020 00000000 		.word	hsd
 177              		.cfi_endproc
 178              	.LFE134:
 180              		.section	.text.BSP_SD_ReadBlocks_DMA,"ax",%progbits
 181              		.align	1
 182              		.p2align 2,,3
 183              		.weak	BSP_SD_ReadBlocks_DMA
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	BSP_SD_ReadBlocks_DMA:
 189              	.LVL14:
 190              	.LFB135:
 139:Src/bsp_driver_sd.c **** 
 140:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadDMABlocksSection */
 141:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 142:Src/bsp_driver_sd.c **** /* USER CODE END BeforeReadDMABlocksSection */
 143:Src/bsp_driver_sd.c **** /**
 144:Src/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
 145:Src/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 146:Src/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 147:Src/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 148:Src/bsp_driver_sd.c ****   * @retval SD status
 149:Src/bsp_driver_sd.c ****   */
 150:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
 151:Src/bsp_driver_sd.c **** {
 191              		.loc 1 151 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 152:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 195              		.loc 1 152 3 view .LVU32
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 7


 153:Src/bsp_driver_sd.c **** 
 154:Src/bsp_driver_sd.c ****   /* Read block(s) in DMA transfer mode */
 155:Src/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks_DMA(&hsd, (uint8_t *)pData, ReadAddr, NumOfBlocks) != HAL_OK)
 196              		.loc 1 155 3 view .LVU33
 151:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 197              		.loc 1 151 1 is_stmt 0 view .LVU34
 198 0000 8446     		mov	ip, r0
 199 0002 08B5     		push	{r3, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 203              		.loc 1 155 7 view .LVU35
 204 0004 0448     		ldr	r0, .L14
 205              	.LVL15:
 151:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 206              		.loc 1 151 1 view .LVU36
 207 0006 1346     		mov	r3, r2
 208              		.loc 1 155 7 view .LVU37
 209 0008 0A46     		mov	r2, r1
 210              	.LVL16:
 211              		.loc 1 155 7 view .LVU38
 212 000a 6146     		mov	r1, ip
 213              	.LVL17:
 214              		.loc 1 155 7 view .LVU39
 215 000c FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 216              	.LVL18:
 156:Src/bsp_driver_sd.c ****   {
 157:Src/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 158:Src/bsp_driver_sd.c ****   }
 159:Src/bsp_driver_sd.c **** 
 160:Src/bsp_driver_sd.c ****   return sd_state;
 217              		.loc 1 160 3 is_stmt 1 view .LVU40
 161:Src/bsp_driver_sd.c **** }
 218              		.loc 1 161 1 is_stmt 0 view .LVU41
 219 0010 0038     		subs	r0, r0, #0
 220              	.LVL19:
 221              		.loc 1 161 1 view .LVU42
 222 0012 18BF     		it	ne
 223 0014 0120     		movne	r0, #1
 224 0016 08BD     		pop	{r3, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0018 00000000 		.word	hsd
 229              		.cfi_endproc
 230              	.LFE135:
 232              		.section	.text.BSP_SD_WriteBlocks_DMA,"ax",%progbits
 233              		.align	1
 234              		.p2align 2,,3
 235              		.weak	BSP_SD_WriteBlocks_DMA
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	BSP_SD_WriteBlocks_DMA:
 241              	.LVL20:
 242              	.LFB136:
 162:Src/bsp_driver_sd.c **** 
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 8


 163:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteDMABlocksSection */
 164:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 165:Src/bsp_driver_sd.c **** /* USER CODE END BeforeWriteDMABlocksSection */
 166:Src/bsp_driver_sd.c **** /**
 167:Src/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 168:Src/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 169:Src/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 170:Src/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 171:Src/bsp_driver_sd.c ****   * @retval SD status
 172:Src/bsp_driver_sd.c ****   */
 173:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
 174:Src/bsp_driver_sd.c **** {
 243              		.loc 1 174 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 175:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 247              		.loc 1 175 3 view .LVU44
 176:Src/bsp_driver_sd.c **** 
 177:Src/bsp_driver_sd.c ****   /* Write block(s) in DMA transfer mode */
 178:Src/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks_DMA(&hsd, (uint8_t *)pData, WriteAddr, NumOfBlocks) != HAL_OK)
 248              		.loc 1 178 3 view .LVU45
 174:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 249              		.loc 1 174 1 is_stmt 0 view .LVU46
 250 0000 8446     		mov	ip, r0
 251 0002 08B5     		push	{r3, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 255              		.loc 1 178 7 view .LVU47
 256 0004 0448     		ldr	r0, .L18
 257              	.LVL21:
 174:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 258              		.loc 1 174 1 view .LVU48
 259 0006 1346     		mov	r3, r2
 260              		.loc 1 178 7 view .LVU49
 261 0008 0A46     		mov	r2, r1
 262              	.LVL22:
 263              		.loc 1 178 7 view .LVU50
 264 000a 6146     		mov	r1, ip
 265              	.LVL23:
 266              		.loc 1 178 7 view .LVU51
 267 000c FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 268              	.LVL24:
 179:Src/bsp_driver_sd.c ****   {
 180:Src/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 181:Src/bsp_driver_sd.c ****   }
 182:Src/bsp_driver_sd.c **** 
 183:Src/bsp_driver_sd.c ****   return sd_state;
 269              		.loc 1 183 3 is_stmt 1 view .LVU52
 184:Src/bsp_driver_sd.c **** }
 270              		.loc 1 184 1 is_stmt 0 view .LVU53
 271 0010 0038     		subs	r0, r0, #0
 272              	.LVL25:
 273              		.loc 1 184 1 view .LVU54
 274 0012 18BF     		it	ne
 275 0014 0120     		movne	r0, #1
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 9


 276 0016 08BD     		pop	{r3, pc}
 277              	.L19:
 278              		.align	2
 279              	.L18:
 280 0018 00000000 		.word	hsd
 281              		.cfi_endproc
 282              	.LFE136:
 284              		.section	.text.BSP_SD_Erase,"ax",%progbits
 285              		.align	1
 286              		.p2align 2,,3
 287              		.weak	BSP_SD_Erase
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	BSP_SD_Erase:
 293              	.LVL26:
 294              	.LFB137:
 185:Src/bsp_driver_sd.c **** 
 186:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeEraseSection */
 187:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 188:Src/bsp_driver_sd.c **** /* USER CODE END BeforeEraseSection */
 189:Src/bsp_driver_sd.c **** /**
 190:Src/bsp_driver_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 191:Src/bsp_driver_sd.c ****   * @param  StartAddr: Start byte address
 192:Src/bsp_driver_sd.c ****   * @param  EndAddr: End byte address
 193:Src/bsp_driver_sd.c ****   * @retval SD status
 194:Src/bsp_driver_sd.c ****   */
 195:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Erase(uint32_t StartAddr, uint32_t EndAddr)
 196:Src/bsp_driver_sd.c **** {
 295              		.loc 1 196 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 197:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 299              		.loc 1 197 3 view .LVU56
 198:Src/bsp_driver_sd.c **** 
 199:Src/bsp_driver_sd.c ****   if (HAL_SD_Erase(&hsd, StartAddr, EndAddr) != HAL_OK)
 300              		.loc 1 199 3 view .LVU57
 196:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 301              		.loc 1 196 1 is_stmt 0 view .LVU58
 302 0000 08B5     		push	{r3, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 196:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 306              		.loc 1 196 1 view .LVU59
 307 0002 0346     		mov	r3, r0
 308 0004 0A46     		mov	r2, r1
 309              		.loc 1 199 7 view .LVU60
 310 0006 0448     		ldr	r0, .L22
 311              	.LVL27:
 312              		.loc 1 199 7 view .LVU61
 313 0008 1946     		mov	r1, r3
 314              	.LVL28:
 315              		.loc 1 199 7 view .LVU62
 316 000a FFF7FEFF 		bl	HAL_SD_Erase
 317              	.LVL29:
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 10


 200:Src/bsp_driver_sd.c ****   {
 201:Src/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 202:Src/bsp_driver_sd.c ****   }
 203:Src/bsp_driver_sd.c **** 
 204:Src/bsp_driver_sd.c ****   return sd_state;
 318              		.loc 1 204 3 is_stmt 1 view .LVU63
 205:Src/bsp_driver_sd.c **** }
 319              		.loc 1 205 1 is_stmt 0 view .LVU64
 320 000e 0038     		subs	r0, r0, #0
 321              	.LVL30:
 322              		.loc 1 205 1 view .LVU65
 323 0010 18BF     		it	ne
 324 0012 0120     		movne	r0, #1
 325 0014 08BD     		pop	{r3, pc}
 326              	.L23:
 327 0016 00BF     		.align	2
 328              	.L22:
 329 0018 00000000 		.word	hsd
 330              		.cfi_endproc
 331              	.LFE137:
 333              		.section	.text.BSP_SD_GetCardState,"ax",%progbits
 334              		.align	1
 335              		.p2align 2,,3
 336              		.weak	BSP_SD_GetCardState
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 341              	BSP_SD_GetCardState:
 342              	.LFB138:
 206:Src/bsp_driver_sd.c **** 
 207:Src/bsp_driver_sd.c **** /**
 208:Src/bsp_driver_sd.c ****   * @brief  Gets the current SD card data status.
 209:Src/bsp_driver_sd.c ****   * @param  None
 210:Src/bsp_driver_sd.c ****   * @retval Data transfer state.
 211:Src/bsp_driver_sd.c ****   *          This value can be one of the following values:
 212:Src/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 213:Src/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
 214:Src/bsp_driver_sd.c ****   */
 215:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_GetCardState(void)
 216:Src/bsp_driver_sd.c **** {
 343              		.loc 1 216 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 217:Src/bsp_driver_sd.c ****   return ((HAL_SD_GetCardState(&hsd) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY)
 347              		.loc 1 217 3 view .LVU67
 216:Src/bsp_driver_sd.c ****   return ((HAL_SD_GetCardState(&hsd) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY)
 348              		.loc 1 216 1 is_stmt 0 view .LVU68
 349 0000 08B5     		push	{r3, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 353              		.loc 1 217 12 view .LVU69
 354 0002 0348     		ldr	r0, .L26
 355 0004 FFF7FEFF 		bl	HAL_SD_GetCardState
 356              	.LVL31:
 218:Src/bsp_driver_sd.c **** }
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 11


 357              		.loc 1 218 1 view .LVU70
 358 0008 0438     		subs	r0, r0, #4
 359 000a 18BF     		it	ne
 360 000c 0120     		movne	r0, #1
 361 000e 08BD     		pop	{r3, pc}
 362              	.L27:
 363              		.align	2
 364              	.L26:
 365 0010 00000000 		.word	hsd
 366              		.cfi_endproc
 367              	.LFE138:
 369              		.section	.text.BSP_SD_GetCardInfo,"ax",%progbits
 370              		.align	1
 371              		.p2align 2,,3
 372              		.weak	BSP_SD_GetCardInfo
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	BSP_SD_GetCardInfo:
 378              	.LVL32:
 379              	.LFB139:
 219:Src/bsp_driver_sd.c **** 
 220:Src/bsp_driver_sd.c **** /**
 221:Src/bsp_driver_sd.c ****   * @brief  Get SD information about specific SD card.
 222:Src/bsp_driver_sd.c ****   * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
 223:Src/bsp_driver_sd.c ****   * @retval None
 224:Src/bsp_driver_sd.c ****   */
 225:Src/bsp_driver_sd.c **** __weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
 226:Src/bsp_driver_sd.c **** {
 380              		.loc 1 226 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 227:Src/bsp_driver_sd.c ****   /* Get SD card Information */
 228:Src/bsp_driver_sd.c ****   HAL_SD_GetCardInfo(&hsd, CardInfo);
 385              		.loc 1 228 3 view .LVU72
 226:Src/bsp_driver_sd.c ****   /* Get SD card Information */
 386              		.loc 1 226 1 is_stmt 0 view .LVU73
 387 0000 0146     		mov	r1, r0
 388              		.loc 1 228 3 view .LVU74
 389 0002 0148     		ldr	r0, .L29
 390              	.LVL33:
 391              		.loc 1 228 3 view .LVU75
 392 0004 FFF7FEBF 		b	HAL_SD_GetCardInfo
 393              	.LVL34:
 394              	.L30:
 395              		.loc 1 228 3 view .LVU76
 396              		.align	2
 397              	.L29:
 398 0008 00000000 		.word	hsd
 399              		.cfi_endproc
 400              	.LFE139:
 402              		.section	.text.BSP_SD_AbortCallback,"ax",%progbits
 403              		.align	1
 404              		.p2align 2,,3
 405              		.weak	BSP_SD_AbortCallback
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 12


 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	BSP_SD_AbortCallback:
 411              	.LFB145:
 412              		.cfi_startproc
 229:Src/bsp_driver_sd.c **** }
 230:Src/bsp_driver_sd.c **** 
 231:Src/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeCallBacksSection */
 232:Src/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 233:Src/bsp_driver_sd.c **** /* USER CODE END BeforeCallBacksSection */
 234:Src/bsp_driver_sd.c **** /**
 235:Src/bsp_driver_sd.c ****   * @brief SD Abort callbacks
 236:Src/bsp_driver_sd.c ****   * @param hsd: SD handle
 237:Src/bsp_driver_sd.c ****   * @retval None
 238:Src/bsp_driver_sd.c ****   */
 239:Src/bsp_driver_sd.c **** void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
 240:Src/bsp_driver_sd.c **** {
 241:Src/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 242:Src/bsp_driver_sd.c **** }
 243:Src/bsp_driver_sd.c **** 
 244:Src/bsp_driver_sd.c **** /**
 245:Src/bsp_driver_sd.c ****   * @brief Tx Transfer completed callback
 246:Src/bsp_driver_sd.c ****   * @param hsd: SD handle
 247:Src/bsp_driver_sd.c ****   * @retval None
 248:Src/bsp_driver_sd.c ****   */
 249:Src/bsp_driver_sd.c **** // void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
 250:Src/bsp_driver_sd.c **** // {
 251:Src/bsp_driver_sd.c **** //   BSP_SD_WriteCpltCallback();
 252:Src/bsp_driver_sd.c **** // }
 253:Src/bsp_driver_sd.c **** 
 254:Src/bsp_driver_sd.c **** /**
 255:Src/bsp_driver_sd.c ****   * @brief Rx Transfer completed callback
 256:Src/bsp_driver_sd.c ****   * @param hsd: SD handle
 257:Src/bsp_driver_sd.c ****   * @retval None
 258:Src/bsp_driver_sd.c ****   */
 259:Src/bsp_driver_sd.c **** // void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
 260:Src/bsp_driver_sd.c **** // {
 261:Src/bsp_driver_sd.c **** //   BSP_SD_ReadCpltCallback();
 262:Src/bsp_driver_sd.c **** // }
 263:Src/bsp_driver_sd.c **** 
 264:Src/bsp_driver_sd.c **** /* USER CODE BEGIN CallBacksSection_C */
 265:Src/bsp_driver_sd.c **** /**
 266:Src/bsp_driver_sd.c ****   * @brief BSP SD Abort callback
 267:Src/bsp_driver_sd.c ****   * @retval None
 268:Src/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 269:Src/bsp_driver_sd.c ****   */
 270:Src/bsp_driver_sd.c **** __weak void BSP_SD_AbortCallback(void)
 413              		.loc 1 270 13 is_stmt 1 view -0
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 7047     		bx	lr
 418              		.cfi_endproc
 419              	.LFE145:
 421 0002 00BF     		.section	.text.HAL_SD_AbortCallback,"ax",%progbits
 422              		.align	1
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 13


 423              		.p2align 2,,3
 424              		.global	HAL_SD_AbortCallback
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	HAL_SD_AbortCallback:
 430              	.LVL35:
 431              	.LFB140:
 240:Src/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 432              		.loc 1 240 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 241:Src/bsp_driver_sd.c **** }
 436              		.loc 1 241 3 view .LVU79
 240:Src/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 437              		.loc 1 240 1 is_stmt 0 view .LVU80
 438 0000 08B5     		push	{r3, lr}
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 241:Src/bsp_driver_sd.c **** }
 442              		.loc 1 241 3 view .LVU81
 443 0002 FFF7FEFF 		bl	BSP_SD_AbortCallback
 444              	.LVL36:
 242:Src/bsp_driver_sd.c **** 
 445              		.loc 1 242 1 view .LVU82
 446 0006 08BD     		pop	{r3, pc}
 447              		.cfi_endproc
 448              	.LFE140:
 450              		.section	.text.BSP_SD_ReadCpltCallback,"ax",%progbits
 451              		.align	1
 452              		.p2align 2,,3
 453              		.weak	BSP_SD_ReadCpltCallback
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 458              	BSP_SD_ReadCpltCallback:
 459              	.LFB147:
 460              		.cfi_startproc
 271:Src/bsp_driver_sd.c **** {
 272:Src/bsp_driver_sd.c **** 
 273:Src/bsp_driver_sd.c **** }
 274:Src/bsp_driver_sd.c **** 
 275:Src/bsp_driver_sd.c **** /**
 276:Src/bsp_driver_sd.c ****   * @brief BSP Tx Transfer completed callback
 277:Src/bsp_driver_sd.c ****   * @retval None
 278:Src/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 279:Src/bsp_driver_sd.c ****   */
 280:Src/bsp_driver_sd.c **** // __weak void BSP_SD_WriteCpltCallback(void)
 281:Src/bsp_driver_sd.c **** // {
 282:Src/bsp_driver_sd.c **** 
 283:Src/bsp_driver_sd.c **** // }
 284:Src/bsp_driver_sd.c **** 
 285:Src/bsp_driver_sd.c **** /**
 286:Src/bsp_driver_sd.c ****   * @brief BSP Rx Transfer completed callback
 287:Src/bsp_driver_sd.c ****   * @retval None
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 14


 288:Src/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 289:Src/bsp_driver_sd.c ****   */
 290:Src/bsp_driver_sd.c **** __weak void BSP_SD_ReadCpltCallback(void)
 461              		.loc 1 290 13 is_stmt 1 view -0
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465 0000 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE147:
 469 0002 00BF     		.section	.text.BSP_SD_IsDetected,"ax",%progbits
 470              		.align	1
 471              		.p2align 2,,3
 472              		.weak	BSP_SD_IsDetected
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	BSP_SD_IsDetected:
 478              	.LFB143:
 291:Src/bsp_driver_sd.c **** {
 292:Src/bsp_driver_sd.c **** 
 293:Src/bsp_driver_sd.c **** }
 294:Src/bsp_driver_sd.c **** /* USER CODE END CallBacksSection_C */
 295:Src/bsp_driver_sd.c **** #endif
 296:Src/bsp_driver_sd.c **** 
 297:Src/bsp_driver_sd.c **** /**
 298:Src/bsp_driver_sd.c ****  * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 299:Src/bsp_driver_sd.c ****  * @param  None
 300:Src/bsp_driver_sd.c ****  * @retval Returns if SD is detected or not
 301:Src/bsp_driver_sd.c ****  */
 302:Src/bsp_driver_sd.c **** __weak uint8_t BSP_SD_IsDetected(void)
 303:Src/bsp_driver_sd.c **** {
 479              		.loc 1 303 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 8
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 304:Src/bsp_driver_sd.c ****   __IO uint8_t status = SD_PRESENT;
 484              		.loc 1 304 3 view .LVU85
 303:Src/bsp_driver_sd.c ****   __IO uint8_t status = SD_PRESENT;
 485              		.loc 1 303 1 is_stmt 0 view .LVU86
 486 0000 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 8
 488              		.loc 1 304 16 view .LVU87
 489 0002 0123     		movs	r3, #1
 490 0004 8DF80730 		strb	r3, [sp, #7]
 305:Src/bsp_driver_sd.c **** 
 306:Src/bsp_driver_sd.c ****   /* USER CODE BEGIN 1 */
 307:Src/bsp_driver_sd.c ****   /* user code can be inserted here */
 308:Src/bsp_driver_sd.c ****   /* USER CODE END 1 */
 309:Src/bsp_driver_sd.c **** 
 310:Src/bsp_driver_sd.c ****   return status;
 491              		.loc 1 310 3 is_stmt 1 view .LVU88
 492              		.loc 1 310 10 is_stmt 0 view .LVU89
 493 0008 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 311:Src/bsp_driver_sd.c **** }
 494              		.loc 1 311 1 view .LVU90
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 15


 495 000c 02B0     		add	sp, sp, #8
 496              		.cfi_def_cfa_offset 0
 497              		@ sp needed
 498 000e 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE143:
 502              		.section	.text.BSP_SD_Init,"ax",%progbits
 503              		.align	1
 504              		.p2align 2,,3
 505              		.weak	BSP_SD_Init
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 510              	BSP_SD_Init:
 511              	.LFB130:
  49:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 512              		.loc 1 49 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
  50:Src/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
 516              		.loc 1 50 3 view .LVU92
 517              	.LVL37:
  52:Src/bsp_driver_sd.c ****   {
 518              		.loc 1 52 3 view .LVU93
  49:Src/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 519              		.loc 1 49 1 is_stmt 0 view .LVU94
 520 0000 08B5     		push	{r3, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 3, -8
 523              		.cfi_offset 14, -4
  52:Src/bsp_driver_sd.c ****   {
 524              		.loc 1 52 7 view .LVU95
 525 0002 FFF7FEFF 		bl	BSP_SD_IsDetected
 526              	.LVL38:
  52:Src/bsp_driver_sd.c ****   {
 527              		.loc 1 52 6 view .LVU96
 528 0006 0128     		cmp	r0, #1
 529 0008 01D0     		beq	.L41
  54:Src/bsp_driver_sd.c ****   }
 530              		.loc 1 54 12 view .LVU97
 531 000a 0120     		movs	r0, #1
 532              	.LVL39:
 533              	.L38:
  69:Src/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 534              		.loc 1 69 1 view .LVU98
 535 000c 08BD     		pop	{r3, pc}
 536              	.LVL40:
 537              	.L41:
  57:Src/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 538              		.loc 1 57 3 is_stmt 1 view .LVU99
  57:Src/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 539              		.loc 1 57 14 is_stmt 0 view .LVU100
 540 000e 0748     		ldr	r0, .L42
 541 0010 FFF7FEFF 		bl	HAL_SD_Init
 542              	.LVL41:
  59:Src/bsp_driver_sd.c ****   {
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 16


 543              		.loc 1 59 3 is_stmt 1 view .LVU101
  59:Src/bsp_driver_sd.c ****   {
 544              		.loc 1 59 6 is_stmt 0 view .LVU102
 545 0014 0028     		cmp	r0, #0
 546 0016 F9D1     		bne	.L38
  62:Src/bsp_driver_sd.c ****     {
 547              		.loc 1 62 6 is_stmt 1 view .LVU103
  62:Src/bsp_driver_sd.c ****     {
 548              		.loc 1 62 10 is_stmt 0 view .LVU104
 549 0018 4FF40061 		mov	r1, #2048
 550 001c 0348     		ldr	r0, .L42
 551              	.LVL42:
  62:Src/bsp_driver_sd.c ****     {
 552              		.loc 1 62 10 view .LVU105
 553 001e FFF7FEFF 		bl	HAL_SD_ConfigWideBusOperation
 554              	.LVL43:
  62:Src/bsp_driver_sd.c ****     {
 555              		.loc 1 62 9 view .LVU106
 556 0022 0038     		subs	r0, r0, #0
 557 0024 18BF     		it	ne
 558 0026 0120     		movne	r0, #1
 559              	.LVL44:
  69:Src/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 560              		.loc 1 69 1 view .LVU107
 561 0028 08BD     		pop	{r3, pc}
 562              	.L43:
 563 002a 00BF     		.align	2
 564              	.L42:
 565 002c 00000000 		.word	hsd
 566              		.cfi_endproc
 567              	.LFE130:
 569              		.text
 570              	.Letext0:
 571              		.file 2 "c:\\users\\pw705\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 572              		.file 3 "c:\\users\\pw705\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 573              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 574              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 575              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 576              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 577              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
ARM GAS  C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_driver_sd.c
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:21     .text.BSP_SD_ITConfig:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:28     .text.BSP_SD_ITConfig:00000000 BSP_SD_ITConfig
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:43     .text.BSP_SD_DetectIT:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:50     .text.BSP_SD_DetectIT:00000000 BSP_SD_DetectIT
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:63     .text.BSP_SD_ReadBlocks:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:70     .text.BSP_SD_ReadBlocks:00000000 BSP_SD_ReadBlocks
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:117    .text.BSP_SD_ReadBlocks:00000020 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:122    .text.BSP_SD_WriteBlocks:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:129    .text.BSP_SD_WriteBlocks:00000000 BSP_SD_WriteBlocks
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:176    .text.BSP_SD_WriteBlocks:00000020 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:181    .text.BSP_SD_ReadBlocks_DMA:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:188    .text.BSP_SD_ReadBlocks_DMA:00000000 BSP_SD_ReadBlocks_DMA
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:228    .text.BSP_SD_ReadBlocks_DMA:00000018 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:233    .text.BSP_SD_WriteBlocks_DMA:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:240    .text.BSP_SD_WriteBlocks_DMA:00000000 BSP_SD_WriteBlocks_DMA
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:280    .text.BSP_SD_WriteBlocks_DMA:00000018 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:285    .text.BSP_SD_Erase:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:292    .text.BSP_SD_Erase:00000000 BSP_SD_Erase
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:329    .text.BSP_SD_Erase:00000018 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:334    .text.BSP_SD_GetCardState:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:341    .text.BSP_SD_GetCardState:00000000 BSP_SD_GetCardState
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:365    .text.BSP_SD_GetCardState:00000010 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:370    .text.BSP_SD_GetCardInfo:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:377    .text.BSP_SD_GetCardInfo:00000000 BSP_SD_GetCardInfo
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:398    .text.BSP_SD_GetCardInfo:00000008 $d
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:403    .text.BSP_SD_AbortCallback:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:410    .text.BSP_SD_AbortCallback:00000000 BSP_SD_AbortCallback
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:422    .text.HAL_SD_AbortCallback:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:429    .text.HAL_SD_AbortCallback:00000000 HAL_SD_AbortCallback
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:451    .text.BSP_SD_ReadCpltCallback:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:458    .text.BSP_SD_ReadCpltCallback:00000000 BSP_SD_ReadCpltCallback
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:470    .text.BSP_SD_IsDetected:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:477    .text.BSP_SD_IsDetected:00000000 BSP_SD_IsDetected
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:503    .text.BSP_SD_Init:00000000 $t
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:510    .text.BSP_SD_Init:00000000 BSP_SD_Init
C:\Users\pw705\AppData\Local\Temp\ccxS6Lsq.s:565    .text.BSP_SD_Init:0000002c $d

UNDEFINED SYMBOLS
HAL_SD_ReadBlocks
hsd
HAL_SD_WriteBlocks
HAL_SD_ReadBlocks_DMA
HAL_SD_WriteBlocks_DMA
HAL_SD_Erase
HAL_SD_GetCardState
HAL_SD_GetCardInfo
HAL_SD_Init
HAL_SD_ConfigWideBusOperation
